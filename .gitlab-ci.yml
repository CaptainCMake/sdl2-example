variables:
  package_user: "stever"
  package_repo: "conan"

stages:
  - build

android:
  image: registry.gitlab.com/ssrobins/docker-android-build
  stage: build
  before_script:
    - lscpu
    - cat /proc/meminfo | grep MemTotal
    - export ANDROID_HOME=/root
    - conan remote add ${package_repo} https://api.bintray.com/conan/${package_user}/${package_repo}
  script:
    - sh ./build_android.sh
  after_script:
    - mkdir _package
    - find . -name \*.apk -exec mv {} _package/ \;
  artifacts:
    paths:
      - build_android/_package/*.apk

ios:
  stage: build
  script:
    - sh ./build_ios.sh
  tags:
    - ios
  allow_failure: true

ios-sim:
  stage: build
  script:
    - sh ./build_ios_sim.sh
  tags:
    - ios
  allow_failure: true

linux:
  image: registry.gitlab.com/ssrobins/docker-linux-build
  stage: build
  script:
    # Environment
    - lscpu
    - cat /proc/meminfo | grep MemTotal
    # Build
    - mkdir _build
    - cd _build
    - conan remote add ${package_repo} https://api.bintray.com/conan/${package_user}/${package_repo}
    - conan install ..
    - cmake -DCMAKE_BUILD_TYPE=Release ..
    - make package -j 4
  artifacts:
    paths:
      - _build/_package/*.tar.gz

mac:
  stage: build
  script:
    - sh ./build_mac.sh
  artifacts:
    paths:
      - build_mac/_package/*.zip
  tags:
    - mac
  allow_failure: true

windows:
  stage: build
  script:
    - mkdir _build
    - cd _build
    - conan install .. -s arch=x86 -s compiler.runtime=MT
    - cmake ..
    - cmake --build . --config Release --target PACKAGE -- /m
  artifacts:
    paths:
      - _build/_package/*.zip
  tags:
    - windows
  allow_failure: true
